@page "/weather"
@using TD1.Models.Repository
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (produits == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nom</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var produit in produits)
            {
                <tr>
                    <td>@produit.Nom</td>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    /*private WeatherForecast[]? forecasts;
     
    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }*/

    private Produit[]? produits;
    
    protected override async Task OnInitializedAsync()
    {
        produits = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public async Task<Produit[]> GetProduitsAsync()
    {
        return await http.GetFromJsonAsync<Produit[]>("produits") ?? [];
    }
}
