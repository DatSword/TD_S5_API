@page "/adddata"
@inject IService<Produit> produitService

<PageTitle>Add Data</PageTitle>

<h1>Ajouter des produits</h1>

<EditForm Model="nouveauProduit" OnValidSubmit="AjouterProduit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="nom" class="form-label">Nom du produit</label>
        <InputText id="nom" class="form-control" @bind-Value="nouveauProduit.NomProduit" />
    </div>

    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputText id="description" class="form-control" @bind-Value="nouveauProduit.Description" />
    </div>

    <div class="mb-3">
        <label for="marque" class="form-label">Marque</label>
        <InputNumber id="marque" class="form-control" @bind-Value="nouveauProduit.IdMarque" />
    </div>

    <div class="mb-3">
        <label for="typeProduit" class="form-label">Type de produit</label>
        <InputNumber id="typeProduit" class="form-control" @bind-Value="nouveauProduit.IdTypeProduit" />
    </div>

    <div class="mb-3">
        <label for="photo" class="form-label">Nom Photo</label>
        <InputText id="photo" class="form-control" @bind-Value="nouveauProduit.NomPhoto" />
    </div>

    <div class="mb-3">
        <label for="uri" class="form-label">Uri de la photo</label>
        <InputText id="uri" class="form-control" @bind-Value="nouveauProduit.UriPhoto" />
    </div>

    <button type="submit" class="btn btn-primary">Ajouter Produit</button>

</EditForm>

@code {
    private Produit nouveauProduit = new Produit();

    private async Task AjouterProduit()
    {
        // Ajoute le nouveau produit via le service
        await produitService.PostItemAsync(nouveauProduit);

        // Réinitialiser le formulaire
        nouveauProduit = new Produit();
    }
    
}
